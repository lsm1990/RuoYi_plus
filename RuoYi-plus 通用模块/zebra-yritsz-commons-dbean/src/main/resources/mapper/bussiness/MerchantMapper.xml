<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zebra.bussiness.mapper.MerchantMapper">

	<resultMap type="Merchant" id="MerchantResult">
		<result property="merchantId" column="merchant_id" />
		<result property="merchantName" column="merchant_name" />
		<result property="merchantAddress" column="merchant_address" />
		<result property="merchantStatus" column="merchant_status" />
		<result property="merchantPic" column="merchant_pic" />
		<result property="merchantBrief" column="merchant_brief" />
		<result property="merchantIntroduce" column="merchant_introduce" />
		<result property="deptId" column="dept_id" />
	</resultMap>

	<select id="selectMerchantListByauto" parameterType="Merchant"
		resultMap="MerchantResult">
		SELECT
		merchant_id
		FROM
		t_merchant m inner join sys_dept
		d on
		m.dept_id=d.dept_id
		WHERE
		1 = 1
		${params.dataMerchantAuth}
	</select>
	<sql id="selectMerchantVo">
		select merchant_id, merchant_name, merchant_address,
		merchant_status,
		merchant_pic, merchant_brief, merchant_introduce,
		dept_id from
		t_merchant
	</sql>

	<select id="selectMerchantList" parameterType="Merchant"
		resultMap="MerchantResult">
		<include refid="selectMerchantVo" />
		<where>
			<if test="merchantName != null  and merchantName != ''"> and merchant_name like concat('%', #{merchantName}, '%')
			</if>
			<if test="merchantStatus != null "> and merchant_status = #{merchantStatus}</if>
			<if test="deptId != null "> and dept_id = #{deptId}</if>
			<if test="params.dataMerchantAuth!=null and params.dataMerchantAuth!=''">${params.dataMerchantAuth}</if>
		</where>
	</select>

	<select id="selectMerchantById" parameterType="Long" resultMap="MerchantResult">
		<include refid="selectMerchantVo" />
		where merchant_id = #{merchantId}
	</select>

	<insert id="insertMerchant" parameterType="Merchant"
		useGeneratedKeys="true" keyProperty="merchantId">
		insert into t_merchant
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="merchantName != null  and merchantName != ''">merchant_name,</if>
			<if test="merchantAddress != null  and merchantAddress != ''">merchant_address,</if>
			<if test="merchantStatus != null ">merchant_status,</if>
			<if test="merchantPic != null  and merchantPic != ''">merchant_pic,</if>
			<if test="merchantBrief != null  and merchantBrief != ''">merchant_brief,</if>
			<if test="merchantIntroduce != null  and merchantIntroduce != ''">merchant_introduce,</if>
			<if test="deptId != null ">dept_id,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="merchantName != null  and merchantName != ''">#{merchantName},</if>
			<if test="merchantAddress != null  and merchantAddress != ''">#{merchantAddress},</if>
			<if test="merchantStatus != null ">#{merchantStatus},</if>
			<if test="merchantPic != null  and merchantPic != ''">#{merchantPic},</if>
			<if test="merchantBrief != null  and merchantBrief != ''">#{merchantBrief},</if>
			<if test="merchantIntroduce != null  and merchantIntroduce != ''">#{merchantIntroduce},</if>
			<if test="deptId != null ">#{deptId},</if>
		</trim>
	</insert>

	<update id="updateMerchant" parameterType="Merchant">
		update t_merchant
		<trim prefix="SET" suffixOverrides=",">
			<if test="merchantName != null  and merchantName != ''">merchant_name = #{merchantName},</if>
			<if test="merchantAddress != null  and merchantAddress != ''">merchant_address = #{merchantAddress},</if>
			<if test="merchantStatus != null ">merchant_status = #{merchantStatus},</if>
			<if test="merchantPic != null  and merchantPic != ''">merchant_pic = #{merchantPic},</if>
			<if test="merchantBrief != null  and merchantBrief != ''">merchant_brief = #{merchantBrief},</if>
			<if test="merchantIntroduce != null  and merchantIntroduce != ''">merchant_introduce = #{merchantIntroduce},</if>
			<if test="deptId != null ">dept_id = #{deptId},</if>
		</trim>
		where merchant_id = #{merchantId}
	</update>

	<delete id="deleteMerchantById" parameterType="Long">
		delete from
		t_merchant where merchant_id = #{merchantId}
	</delete>

	<delete id="deleteMerchantByIds" parameterType="String">
		delete from t_merchant where merchant_id in
		<foreach item="merchantId" collection="array" open="("
			separator="," close=")">
			#{merchantId}
		</foreach>
	</delete>

</mapper>